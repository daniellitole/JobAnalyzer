/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orangeCoastTestingPackage;

import java.awt.Toolkit;

/**
 *
 * @author Test
 */
public class parameterHelpWindow extends javax.swing.JFrame {

    /**
     * Creates new form parameterHelpWindow
     */
    public parameterHelpWindow() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeHeader = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Job Analyzer (Parameter Help)");
        setResizable(false);

        welcomeHeader.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        welcomeHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        welcomeHeader.setText("Help: Parameter Window");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea2.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("How do I use the Parameter Window?:\n--The parameter window allows you to input information to help filter the data being used to populate the graph\n--If a box is left blank, Job Analyzer will not consider that piece of information when filtering data. For example if the customer box were to be left blank, Job Analyzer would not take customer into consideration when filtering data from the storage file.\n--Once you have entered the information for Job Analyzer to filter the data, you should decide whether or not to save the resulting graph as a .png file\n--Click \"Generate Graph\" to general an Individual control chart\n--NOTE: When filtering by department, if none selected, will return any department, but if any are selected, Job Analyzer will only return jobs with those exact departments. For example, if you selected VT and nothing else, Job Analyzer WILL NOT return any job with VT, but will return any job with ONLY VT\n\n\nSaving as PNG:\n--If the box labeled \"Save graph as PNG?\" is checked Job Analylzer will save graph as .png file in the same location as the jobAnalyzerDataStorage.txt file. (C:/Users/USER_NAME/...)\n\nWhy is Job Analzyer telling me there is a formatting issue?:\n--An error occurs when the format of user input is incorrect. There may be a letter where a number should be or a number where a letter should be. Double check your input.\n--Please note that in the \"Date\" section, the date must be either fully filled out or not at all\n\n\nParts of the control chart:\n--Job Analyzer will generate a line graph showing a DATA line, 2 solid horizontal lines, and (depending on user parameters) 1 or 2 dotted horizontal lines. \n--The DATA line represents the job information (to examine a data point, mouseover the point)\n--The 2 solid lines are the Upper Control Limit (UCL) and Lower Control Limit (LCL) respectively\n--The dotted lines are the times for 1 Day, 3 Day, and 5 Day timing and are labeled appropriately\n\n\nZooming into control chart:\n--Hold down the mouse and drag down while holding the mouse button, this should highlight some portion of the graph\n--Upon releasing the mouse, the graph will have zoomed in on that particular portion of the graph (width will be unchanged)\n--To unzoom, click, hold, and drag the mouse up (this will go back to default view)\n\n\nReading the control chart (Out of control checks):\n--The most important thing to look for in the control chart is any data point exceeding the control limits, (higher than UCL or lower than LCL)\n--Next things to look for are Adjustments (Data slowly rising and falling dramatically, then repeating that pattern), Reduction in Variability over time, several consecutive data points near the control limit, a Run (7 or more data points rising consecutively), Cycle (any repeating pattern over time), or an overarching Trend.\n");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(parameterHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(parameterHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(parameterHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(parameterHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new parameterHelpWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel welcomeHeader;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("graphIcon.png")));
    }
}
