/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orangeCoastTestingPackage;

/**
 *
 * @author Test
 */

import java.awt.Toolkit;
import java.util.*;
import java.io.*;
public class warningWindow extends javax.swing.JFrame {

    /**
     * Creates new form warningWindow
     * @param currentData
     * @param repeatIndex
     * @param replacement
     */
    public warningWindow(List currentData, int repeatIndex, String replacement) {
        initComponents();
        setIcon();
        listToModify = currentData;
        this.repeatIndex = repeatIndex;
        this.replacement = replacement;
        cancelButton.requestFocus();
    }

    private warningWindow() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customerLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        warningMessage = new javax.swing.JTextArea();
        overwriteButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        inputButton = new javax.swing.JButton();
        topLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Job Analyzer");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        customerLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        customerLabel.setText("WARNING!");
        customerLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        customerLabel.setFocusable(false);
        customerLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jScrollPane1.setBorder(null);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        warningMessage.setEditable(false);
        warningMessage.setBackground(new java.awt.Color(217, 217, 222));
        warningMessage.setColumns(20);
        warningMessage.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        warningMessage.setLineWrap(true);
        warningMessage.setRows(5);
        warningMessage.setText("The OC# you have entered has been entered before, what would you like to do? You may overwrite the previous entry, input the current entry anyway, or cancel the entry.");
        warningMessage.setWrapStyleWord(true);
        warningMessage.setBorder(null);
        warningMessage.setOpaque(false);
        jScrollPane1.setViewportView(warningMessage);

        overwriteButton.setText("Overwrite");
        overwriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overwriteButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel entry");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        inputButton.setText("Input");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(customerLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(overwriteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(topLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(310, 310, 310)))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topLabel)
                .addGap(16, 16, 16)
                .addComponent(customerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overwriteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Doesn't need to do anything other than close the window because input window
    //already called writeToFile();
    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_inputButtonActionPerformed

    //Deletes last thing in storage file (to counteract the writeToFile in inputWindow
    //also closes this window
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //Reading data file
        List<String> dataForDelete = new ArrayList<String>();
        try{
            String readUserName = System.getProperty("user.name");
            String readDestination = "C:/Users/" + readUserName + "/jobAnalyzerDataStorage.txt";
            Scanner input = new Scanner(new File(readDestination));
            while(input.hasNextLine()) {
                dataForDelete.add(input.nextLine());
            }
        } catch(IOException e) {
            topLabel.setText(e.toString());
        }
        //Overwriting file
        try{
            String writeDestination = "";
            String writeUserName = System.getProperty("user.name");
            writeDestination = "C:/Users/" + writeUserName + "/jobAnalyzerDataStorage.txt";
            Writer fileWriter = new FileWriter(writeDestination);
            for(int i = 0; i < dataForDelete.size() - 1; i++) {
                fileWriter.write(dataForDelete.get(i) + "\n");
            }
            fileWriter.close();
        } catch(IOException e) {
            topLabel.setText(e.toString());
        }
        listToModify.remove(listToModify.size() - 1);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void overwriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overwriteButtonActionPerformed
        listToModify.remove(repeatIndex);
        listToModify.add(repeatIndex, replacement);
        //Newly added
        try{
            String writeDestination = "";
            String writeUserName = System.getProperty("user.name");
            writeDestination = "C:/Users/" + writeUserName + "/jobAnalyzerDataStorage.txt";
            Writer fileWriter = new FileWriter(writeDestination);
            for(int i = 0; i < listToModify.size(); i++) {
                fileWriter.write(listToModify.get(i) + "\n");
            }
            fileWriter.close();
        } catch(IOException e) {
            topLabel.setText(e.toString());
        }
        //end of new code
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_overwriteButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(warningWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(warningWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(warningWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(warningWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new warningWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JButton inputButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton overwriteButton;
    private javax.swing.JLabel topLabel;
    private javax.swing.JTextArea warningMessage;
    // End of variables declaration//GEN-END:variables
    //My fields
    private List<String> listToModify;
    private int repeatIndex;
    private String replacement;
    //End of my fields
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("graphIcon.png")));
    }
}
