/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orangeCoastTestingPackage;

import java.awt.Toolkit;

/**
 *
 * @author Test
 */
public class inputHelpWindow extends javax.swing.JFrame {

    /**
     * Creates new form inputHelpWindow
     */
    public inputHelpWindow() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeHeader = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Job Analyzer (Input Help)");
        setResizable(false);

        welcomeHeader.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        welcomeHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        welcomeHeader.setText("Help: Input Window");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea2.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("How do I use the Parameter Window?:\n--The Input Window allows you to input job information for Job Analyzer to store and later do statistical analysis on\n--The data is stored in C:/Users/USER_NAME/jobAnalyzerDataStorage.txt\n--NOTE: The time entered is not in military time, use 12-hour clock time instead\n--If there is a formatting issue, Job Analyzer will tell you there is an error and WILL NOT add the data you provided for that entry to the storage file\n--If you successfully enter a job, Job Analyzer will print out the job information in the event you want to double check your input\n--For your convinience, there is a \"Delete Last\" button which will delete the last thing in the storage file, starting with the most recently entered. Job Analyzer will also tell you the information of the job that was deleted. This is not undoable so please be careful.\n--After entering a job, Job Analyzer will leave the fields filled with what you typed, if you would like to clear all of the boxes, use the \"Clear\" button.\n\n\nWhat is the weekend value?:\n--The weekend value allows you to select how many weekends (if any) have elapsed between the beginning and end of the job\n--For example, if a job were to start on a friday and finish on a monday, the weekend value would be 1\n\n\nHow do I know Job Analyzer registered my input?:\n--Look at the output below where you type, if Job Analyzer registered your input, the last thing you entered should appear there (assuming it was entered in the correct format)\n\n\nNew Customer Alerts:\n--If you enter a customer name that Job Analyzer has not seen before, it will warn you that there is a possible typo. Please be sure to double check your input. If it was indeed a typo, please use the \"Delete Last\" button. Ignore the message if it was not a typo and rather a new customer was entered\n\n\nRepeat OC# Alerts:\n--If you enter an OC number that has already been entered, Job Analyzer will warn you and present you with 3 options, cancel your entry, overwrite the previous data, or input the entry without overwriting previous data.\n--If there are multiple of the same OC number (because you, the user, have allowed it) the overwrite function will only overwrite the one entered earliest\n\n\nWhy is Job Analzyer telling me there is a formatting issue?:\n--An error occurs when the format of user input is incorrect. There may be a letter where a number should be or a number where a letter should be or a blank somewhere there shouldn't be. Double check your input.\n\n\n\"Get Data\" button:\n--The \"Get Data\" button will take you to the Parameter Window, where you can filter the raw data stored in the storage file mentioned above\n--This filtered data is used to generate a graph\n--For more information, consult the \"Help\" button in the parameter window\n\n\nSharing Data:\n--Take your C:/Users/USER_NAME/jobAnalyzerDataStorage.txt file and send it to the recipient, ask the recipient to copy all the data on your jobAnalyzerDataStorage.txt file and paste it to the end of their jobAnalyzerDataStorage.txt file");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputHelpWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputHelpWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel welcomeHeader;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("graphIcon.png")));
    }
}
